/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cz.csob.ency.modules.apps.meta.cds.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.NoSuchModelException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ContainerModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.TrashedModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import cz.csob.ency.modules.apps.meta.cds.model.SystemEntry;
import cz.csob.ency.modules.apps.meta.cds.model.SystemEntryModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SystemEntry service. Represents a row in the &quot;MetaCds_SystemEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SystemEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SystemEntryImpl}.
 * </p>
 *
 * @author "Miroslav Čermák"
 * @see SystemEntryImpl
 * @generated
 */
@JSON(strict = true)
public class SystemEntryModelImpl
	extends BaseModelImpl<SystemEntry> implements SystemEntryModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a system entry model instance should use the <code>SystemEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "MetaCds_SystemEntry";

	public static final Object[][] TABLE_COLUMNS = {
		{"mvccVersion", Types.BIGINT}, {"uuid_", Types.VARCHAR},
		{"systemEntryId", Types.BIGINT}, {"systemCode", Types.BIGINT},
		{"systemName", Types.VARCHAR}, {"systemTitle", Types.VARCHAR},
		{"systemType", Types.VARCHAR}, {"description", Types.CLOB},
		{"stewardName", Types.VARCHAR}, {"stewardId", Types.VARCHAR},
		{"stewardDepartment", Types.VARCHAR},
		{"businessOwnerName", Types.VARCHAR},
		{"businessOwnerId", Types.VARCHAR},
		{"contactPersonName", Types.VARCHAR},
		{"contactPersonId", Types.VARCHAR}, {"sandboxName", Types.VARCHAR},
		{"gestorDepartmentId", Types.VARCHAR},
		{"gestorDepartmentName", Types.VARCHAR}, {"role_", Types.VARCHAR},
		{"snowAssetTagId", Types.VARCHAR}, {"snowAssetTagName", Types.VARCHAR},
		{"isSlaSigned", Types.BOOLEAN}, {"isSelfBi", Types.BOOLEAN},
		{"isActive", Types.BOOLEAN}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"urlTitle", Types.VARCHAR},
		{"status", Types.INTEGER}, {"statusByUserId", Types.BIGINT},
		{"statusByUserName", Types.VARCHAR}, {"statusDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("systemCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("systemName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.CLOB);
		TABLE_COLUMNS_MAP.put("stewardName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("stewardId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("stewardDepartment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessOwnerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessOwnerId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sandboxName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gestorDepartmentId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gestorDepartmentName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("role_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("snowAssetTagId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("snowAssetTagName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isSlaSigned", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("isSelfBi", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("isActive", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("urlTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table MetaCds_SystemEntry (mvccVersion LONG default 0 not null,uuid_ VARCHAR(75) null,systemEntryId LONG not null primary key,systemCode LONG,systemName VARCHAR(10) null,systemTitle VARCHAR(200) null,systemType VARCHAR(20) null,description TEXT null,stewardName VARCHAR(3000) null,stewardId VARCHAR(300) null,stewardDepartment VARCHAR(3000) null,businessOwnerName VARCHAR(3000) null,businessOwnerId VARCHAR(300) null,contactPersonName VARCHAR(3000) null,contactPersonId VARCHAR(300) null,sandboxName VARCHAR(256) null,gestorDepartmentId VARCHAR(300) null,gestorDepartmentName VARCHAR(512) null,role_ VARCHAR(256) null,snowAssetTagId VARCHAR(300) null,snowAssetTagName VARCHAR(3000) null,isSlaSigned BOOLEAN,isSelfBi BOOLEAN,isActive BOOLEAN,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,urlTitle VARCHAR(256) null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table MetaCds_SystemEntry";

	public static final String ORDER_BY_JPQL =
		" ORDER BY systemEntry.systemEntryId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY MetaCds_SystemEntry.systemEntryId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ISACTIVE_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ISSELFBI_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ISSLASIGNED_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SYSTEMCODE_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SYSTEMENTRYID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SYSTEMNAME_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long URLTITLE_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long USERID_COLUMN_BITMASK = 1024L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2048L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SystemEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _systemEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSystemEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _systemEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SystemEntry.class;
	}

	@Override
	public String getModelClassName() {
		return SystemEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SystemEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SystemEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SystemEntry, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SystemEntry)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SystemEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SystemEntry, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SystemEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SystemEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SystemEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<SystemEntry, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<SystemEntry, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<SystemEntry, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<SystemEntry, Object>>();
		Map<String, BiConsumer<SystemEntry, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<SystemEntry, ?>>();

		attributeGetterFunctions.put(
			"mvccVersion", SystemEntry::getMvccVersion);
		attributeSetterBiConsumers.put(
			"mvccVersion",
			(BiConsumer<SystemEntry, Long>)SystemEntry::setMvccVersion);
		attributeGetterFunctions.put("uuid", SystemEntry::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<SystemEntry, String>)SystemEntry::setUuid);
		attributeGetterFunctions.put(
			"systemEntryId", SystemEntry::getSystemEntryId);
		attributeSetterBiConsumers.put(
			"systemEntryId",
			(BiConsumer<SystemEntry, Long>)SystemEntry::setSystemEntryId);
		attributeGetterFunctions.put("systemCode", SystemEntry::getSystemCode);
		attributeSetterBiConsumers.put(
			"systemCode",
			(BiConsumer<SystemEntry, Long>)SystemEntry::setSystemCode);
		attributeGetterFunctions.put("systemName", SystemEntry::getSystemName);
		attributeSetterBiConsumers.put(
			"systemName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSystemName);
		attributeGetterFunctions.put(
			"systemTitle", SystemEntry::getSystemTitle);
		attributeSetterBiConsumers.put(
			"systemTitle",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSystemTitle);
		attributeGetterFunctions.put("systemType", SystemEntry::getSystemType);
		attributeSetterBiConsumers.put(
			"systemType",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSystemType);
		attributeGetterFunctions.put(
			"description", SystemEntry::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<SystemEntry, String>)SystemEntry::setDescription);
		attributeGetterFunctions.put(
			"stewardName", SystemEntry::getStewardName);
		attributeSetterBiConsumers.put(
			"stewardName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setStewardName);
		attributeGetterFunctions.put("stewardId", SystemEntry::getStewardId);
		attributeSetterBiConsumers.put(
			"stewardId",
			(BiConsumer<SystemEntry, String>)SystemEntry::setStewardId);
		attributeGetterFunctions.put(
			"stewardDepartment", SystemEntry::getStewardDepartment);
		attributeSetterBiConsumers.put(
			"stewardDepartment",
			(BiConsumer<SystemEntry, String>)SystemEntry::setStewardDepartment);
		attributeGetterFunctions.put(
			"businessOwnerName", SystemEntry::getBusinessOwnerName);
		attributeSetterBiConsumers.put(
			"businessOwnerName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setBusinessOwnerName);
		attributeGetterFunctions.put(
			"businessOwnerId", SystemEntry::getBusinessOwnerId);
		attributeSetterBiConsumers.put(
			"businessOwnerId",
			(BiConsumer<SystemEntry, String>)SystemEntry::setBusinessOwnerId);
		attributeGetterFunctions.put(
			"contactPersonName", SystemEntry::getContactPersonName);
		attributeSetterBiConsumers.put(
			"contactPersonName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setContactPersonName);
		attributeGetterFunctions.put(
			"contactPersonId", SystemEntry::getContactPersonId);
		attributeSetterBiConsumers.put(
			"contactPersonId",
			(BiConsumer<SystemEntry, String>)SystemEntry::setContactPersonId);
		attributeGetterFunctions.put(
			"sandboxName", SystemEntry::getSandboxName);
		attributeSetterBiConsumers.put(
			"sandboxName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSandboxName);
		attributeGetterFunctions.put(
			"gestorDepartmentId", SystemEntry::getGestorDepartmentId);
		attributeSetterBiConsumers.put(
			"gestorDepartmentId",
			(BiConsumer<SystemEntry, String>)
				SystemEntry::setGestorDepartmentId);
		attributeGetterFunctions.put(
			"gestorDepartmentName", SystemEntry::getGestorDepartmentName);
		attributeSetterBiConsumers.put(
			"gestorDepartmentName",
			(BiConsumer<SystemEntry, String>)
				SystemEntry::setGestorDepartmentName);
		attributeGetterFunctions.put("role", SystemEntry::getRole);
		attributeSetterBiConsumers.put(
			"role", (BiConsumer<SystemEntry, String>)SystemEntry::setRole);
		attributeGetterFunctions.put(
			"snowAssetTagId", SystemEntry::getSnowAssetTagId);
		attributeSetterBiConsumers.put(
			"snowAssetTagId",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSnowAssetTagId);
		attributeGetterFunctions.put(
			"snowAssetTagName", SystemEntry::getSnowAssetTagName);
		attributeSetterBiConsumers.put(
			"snowAssetTagName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setSnowAssetTagName);
		attributeGetterFunctions.put(
			"isSlaSigned", SystemEntry::getIsSlaSigned);
		attributeSetterBiConsumers.put(
			"isSlaSigned",
			(BiConsumer<SystemEntry, Boolean>)SystemEntry::setIsSlaSigned);
		attributeGetterFunctions.put("isSelfBi", SystemEntry::getIsSelfBi);
		attributeSetterBiConsumers.put(
			"isSelfBi",
			(BiConsumer<SystemEntry, Boolean>)SystemEntry::setIsSelfBi);
		attributeGetterFunctions.put("isActive", SystemEntry::getIsActive);
		attributeSetterBiConsumers.put(
			"isActive",
			(BiConsumer<SystemEntry, Boolean>)SystemEntry::setIsActive);
		attributeGetterFunctions.put("groupId", SystemEntry::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<SystemEntry, Long>)SystemEntry::setGroupId);
		attributeGetterFunctions.put("companyId", SystemEntry::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<SystemEntry, Long>)SystemEntry::setCompanyId);
		attributeGetterFunctions.put("userId", SystemEntry::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<SystemEntry, Long>)SystemEntry::setUserId);
		attributeGetterFunctions.put("userName", SystemEntry::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setUserName);
		attributeGetterFunctions.put("createDate", SystemEntry::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<SystemEntry, Date>)SystemEntry::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", SystemEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<SystemEntry, Date>)SystemEntry::setModifiedDate);
		attributeGetterFunctions.put("urlTitle", SystemEntry::getUrlTitle);
		attributeSetterBiConsumers.put(
			"urlTitle",
			(BiConsumer<SystemEntry, String>)SystemEntry::setUrlTitle);
		attributeGetterFunctions.put("status", SystemEntry::getStatus);
		attributeSetterBiConsumers.put(
			"status", (BiConsumer<SystemEntry, Integer>)SystemEntry::setStatus);
		attributeGetterFunctions.put(
			"statusByUserId", SystemEntry::getStatusByUserId);
		attributeSetterBiConsumers.put(
			"statusByUserId",
			(BiConsumer<SystemEntry, Long>)SystemEntry::setStatusByUserId);
		attributeGetterFunctions.put(
			"statusByUserName", SystemEntry::getStatusByUserName);
		attributeSetterBiConsumers.put(
			"statusByUserName",
			(BiConsumer<SystemEntry, String>)SystemEntry::setStatusByUserName);
		attributeGetterFunctions.put("statusDate", SystemEntry::getStatusDate);
		attributeSetterBiConsumers.put(
			"statusDate",
			(BiConsumer<SystemEntry, Date>)SystemEntry::setStatusDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mvccVersion = mvccVersion;
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getSystemEntryId() {
		return _systemEntryId;
	}

	@Override
	public void setSystemEntryId(long systemEntryId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemEntryId = systemEntryId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSystemEntryId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("systemEntryId"));
	}

	@JSON
	@Override
	public long getSystemCode() {
		return _systemCode;
	}

	@Override
	public void setSystemCode(long systemCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemCode = systemCode;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSystemCode() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("systemCode"));
	}

	@JSON
	@Override
	public String getSystemName() {
		if (_systemName == null) {
			return "";
		}
		else {
			return _systemName;
		}
	}

	@Override
	public void setSystemName(String systemName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemName = systemName;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalSystemName() {
		return getColumnOriginalValue("systemName");
	}

	@JSON
	@Override
	public String getSystemTitle() {
		if (_systemTitle == null) {
			return "";
		}
		else {
			return _systemTitle;
		}
	}

	@Override
	public void setSystemTitle(String systemTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemTitle = systemTitle;
	}

	@JSON
	@Override
	public String getSystemType() {
		if (_systemType == null) {
			return "";
		}
		else {
			return _systemType;
		}
	}

	@Override
	public void setSystemType(String systemType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemType = systemType;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public String getStewardName() {
		if (_stewardName == null) {
			return "";
		}
		else {
			return _stewardName;
		}
	}

	@Override
	public void setStewardName(String stewardName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stewardName = stewardName;
	}

	@JSON
	@Override
	public String getStewardId() {
		if (_stewardId == null) {
			return "";
		}
		else {
			return _stewardId;
		}
	}

	@Override
	public void setStewardId(String stewardId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stewardId = stewardId;
	}

	@JSON
	@Override
	public String getStewardDepartment() {
		if (_stewardDepartment == null) {
			return "";
		}
		else {
			return _stewardDepartment;
		}
	}

	@Override
	public void setStewardDepartment(String stewardDepartment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stewardDepartment = stewardDepartment;
	}

	@JSON
	@Override
	public String getBusinessOwnerName() {
		if (_businessOwnerName == null) {
			return "";
		}
		else {
			return _businessOwnerName;
		}
	}

	@Override
	public void setBusinessOwnerName(String businessOwnerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessOwnerName = businessOwnerName;
	}

	@JSON
	@Override
	public String getBusinessOwnerId() {
		if (_businessOwnerId == null) {
			return "";
		}
		else {
			return _businessOwnerId;
		}
	}

	@Override
	public void setBusinessOwnerId(String businessOwnerId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessOwnerId = businessOwnerId;
	}

	@JSON
	@Override
	public String getContactPersonName() {
		if (_contactPersonName == null) {
			return "";
		}
		else {
			return _contactPersonName;
		}
	}

	@Override
	public void setContactPersonName(String contactPersonName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPersonName = contactPersonName;
	}

	@JSON
	@Override
	public String getContactPersonId() {
		if (_contactPersonId == null) {
			return "";
		}
		else {
			return _contactPersonId;
		}
	}

	@Override
	public void setContactPersonId(String contactPersonId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPersonId = contactPersonId;
	}

	@JSON
	@Override
	public String getSandboxName() {
		if (_sandboxName == null) {
			return "";
		}
		else {
			return _sandboxName;
		}
	}

	@Override
	public void setSandboxName(String sandboxName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sandboxName = sandboxName;
	}

	@JSON
	@Override
	public String getGestorDepartmentId() {
		if (_gestorDepartmentId == null) {
			return "";
		}
		else {
			return _gestorDepartmentId;
		}
	}

	@Override
	public void setGestorDepartmentId(String gestorDepartmentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gestorDepartmentId = gestorDepartmentId;
	}

	@JSON
	@Override
	public String getGestorDepartmentName() {
		if (_gestorDepartmentName == null) {
			return "";
		}
		else {
			return _gestorDepartmentName;
		}
	}

	@Override
	public void setGestorDepartmentName(String gestorDepartmentName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gestorDepartmentName = gestorDepartmentName;
	}

	@JSON
	@Override
	public String getRole() {
		if (_role == null) {
			return "";
		}
		else {
			return _role;
		}
	}

	@Override
	public void setRole(String role) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_role = role;
	}

	@JSON
	@Override
	public String getSnowAssetTagId() {
		if (_snowAssetTagId == null) {
			return "";
		}
		else {
			return _snowAssetTagId;
		}
	}

	@Override
	public void setSnowAssetTagId(String snowAssetTagId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_snowAssetTagId = snowAssetTagId;
	}

	@JSON
	@Override
	public String getSnowAssetTagName() {
		if (_snowAssetTagName == null) {
			return "";
		}
		else {
			return _snowAssetTagName;
		}
	}

	@Override
	public void setSnowAssetTagName(String snowAssetTagName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_snowAssetTagName = snowAssetTagName;
	}

	@JSON
	@Override
	public boolean getIsSlaSigned() {
		return _isSlaSigned;
	}

	@JSON
	@Override
	public boolean isIsSlaSigned() {
		return _isSlaSigned;
	}

	@Override
	public void setIsSlaSigned(boolean isSlaSigned) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isSlaSigned = isSlaSigned;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalIsSlaSigned() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("isSlaSigned"));
	}

	@JSON
	@Override
	public boolean getIsSelfBi() {
		return _isSelfBi;
	}

	@JSON
	@Override
	public boolean isIsSelfBi() {
		return _isSelfBi;
	}

	@Override
	public void setIsSelfBi(boolean isSelfBi) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isSelfBi = isSelfBi;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalIsSelfBi() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("isSelfBi"));
	}

	@JSON
	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@JSON
	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isActive = isActive;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalIsActive() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("isActive"));
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalUserId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("userId"));
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getUrlTitle() {
		if (_urlTitle == null) {
			return "";
		}
		else {
			return _urlTitle;
		}
	}

	@Override
	public void setUrlTitle(String urlTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_urlTitle = urlTitle;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUrlTitle() {
		return getColumnOriginalValue("urlTitle");
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(SystemEntry.class.getName()));
	}

	@Override
	public com.liferay.trash.kernel.model.TrashEntry getTrashEntry()
		throws PortalException {

		if (!isInTrash()) {
			return null;
		}

		com.liferay.trash.kernel.model.TrashEntry trashEntry =
			com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil.
				fetchEntry(getModelClassName(), getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		com.liferay.portal.kernel.trash.TrashHandler trashHandler =
			getTrashHandler();

		if (Validator.isNotNull(
				trashHandler.getContainerModelClassName(getPrimaryKey()))) {

			ContainerModel containerModel = null;

			try {
				containerModel = trashHandler.getParentContainerModel(this);
			}
			catch (NoSuchModelException noSuchModelException) {
				return null;
			}

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler =
					com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil.
						getTrashHandler(
							trashHandler.getContainerModelClassName(
								containerModel.getContainerModelId()));

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(
					containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	/**
	 * @deprecated As of Judson (7.1.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public com.liferay.portal.kernel.trash.TrashHandler getTrashHandler() {
		return com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil.
			getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		com.liferay.portal.kernel.trash.TrashHandler trashHandler =
			getTrashHandler();

		if ((trashHandler == null) ||
			Validator.isNull(
				trashHandler.getContainerModelClassName(getPrimaryKey()))) {

			return false;
		}

		try {
			ContainerModel containerModel =
				trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception exception) {
		}

		return false;
	}

	@Override
	public boolean isInTrashExplicitly() {
		if (!isInTrash()) {
			return false;
		}

		com.liferay.trash.kernel.model.TrashEntry trashEntry =
			com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil.
				fetchEntry(getModelClassName(), getTrashEntryClassPK());

		if (trashEntry != null) {
			return true;
		}

		return false;
	}

	@Override
	public boolean isInTrashImplicitly() {
		if (!isInTrash()) {
			return false;
		}

		com.liferay.trash.kernel.model.TrashEntry trashEntry =
			com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil.
				fetchEntry(getModelClassName(), getTrashEntryClassPK());

		if (trashEntry != null) {
			return false;
		}

		return true;
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SystemEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SystemEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SystemEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SystemEntryImpl systemEntryImpl = new SystemEntryImpl();

		systemEntryImpl.setMvccVersion(getMvccVersion());
		systemEntryImpl.setUuid(getUuid());
		systemEntryImpl.setSystemEntryId(getSystemEntryId());
		systemEntryImpl.setSystemCode(getSystemCode());
		systemEntryImpl.setSystemName(getSystemName());
		systemEntryImpl.setSystemTitle(getSystemTitle());
		systemEntryImpl.setSystemType(getSystemType());
		systemEntryImpl.setDescription(getDescription());
		systemEntryImpl.setStewardName(getStewardName());
		systemEntryImpl.setStewardId(getStewardId());
		systemEntryImpl.setStewardDepartment(getStewardDepartment());
		systemEntryImpl.setBusinessOwnerName(getBusinessOwnerName());
		systemEntryImpl.setBusinessOwnerId(getBusinessOwnerId());
		systemEntryImpl.setContactPersonName(getContactPersonName());
		systemEntryImpl.setContactPersonId(getContactPersonId());
		systemEntryImpl.setSandboxName(getSandboxName());
		systemEntryImpl.setGestorDepartmentId(getGestorDepartmentId());
		systemEntryImpl.setGestorDepartmentName(getGestorDepartmentName());
		systemEntryImpl.setRole(getRole());
		systemEntryImpl.setSnowAssetTagId(getSnowAssetTagId());
		systemEntryImpl.setSnowAssetTagName(getSnowAssetTagName());
		systemEntryImpl.setIsSlaSigned(isIsSlaSigned());
		systemEntryImpl.setIsSelfBi(isIsSelfBi());
		systemEntryImpl.setIsActive(isIsActive());
		systemEntryImpl.setGroupId(getGroupId());
		systemEntryImpl.setCompanyId(getCompanyId());
		systemEntryImpl.setUserId(getUserId());
		systemEntryImpl.setUserName(getUserName());
		systemEntryImpl.setCreateDate(getCreateDate());
		systemEntryImpl.setModifiedDate(getModifiedDate());
		systemEntryImpl.setUrlTitle(getUrlTitle());
		systemEntryImpl.setStatus(getStatus());
		systemEntryImpl.setStatusByUserId(getStatusByUserId());
		systemEntryImpl.setStatusByUserName(getStatusByUserName());
		systemEntryImpl.setStatusDate(getStatusDate());

		systemEntryImpl.resetOriginalValues();

		return systemEntryImpl;
	}

	@Override
	public SystemEntry cloneWithOriginalValues() {
		SystemEntryImpl systemEntryImpl = new SystemEntryImpl();

		systemEntryImpl.setMvccVersion(
			this.<Long>getColumnOriginalValue("mvccVersion"));
		systemEntryImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		systemEntryImpl.setSystemEntryId(
			this.<Long>getColumnOriginalValue("systemEntryId"));
		systemEntryImpl.setSystemCode(
			this.<Long>getColumnOriginalValue("systemCode"));
		systemEntryImpl.setSystemName(
			this.<String>getColumnOriginalValue("systemName"));
		systemEntryImpl.setSystemTitle(
			this.<String>getColumnOriginalValue("systemTitle"));
		systemEntryImpl.setSystemType(
			this.<String>getColumnOriginalValue("systemType"));
		systemEntryImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		systemEntryImpl.setStewardName(
			this.<String>getColumnOriginalValue("stewardName"));
		systemEntryImpl.setStewardId(
			this.<String>getColumnOriginalValue("stewardId"));
		systemEntryImpl.setStewardDepartment(
			this.<String>getColumnOriginalValue("stewardDepartment"));
		systemEntryImpl.setBusinessOwnerName(
			this.<String>getColumnOriginalValue("businessOwnerName"));
		systemEntryImpl.setBusinessOwnerId(
			this.<String>getColumnOriginalValue("businessOwnerId"));
		systemEntryImpl.setContactPersonName(
			this.<String>getColumnOriginalValue("contactPersonName"));
		systemEntryImpl.setContactPersonId(
			this.<String>getColumnOriginalValue("contactPersonId"));
		systemEntryImpl.setSandboxName(
			this.<String>getColumnOriginalValue("sandboxName"));
		systemEntryImpl.setGestorDepartmentId(
			this.<String>getColumnOriginalValue("gestorDepartmentId"));
		systemEntryImpl.setGestorDepartmentName(
			this.<String>getColumnOriginalValue("gestorDepartmentName"));
		systemEntryImpl.setRole(this.<String>getColumnOriginalValue("role_"));
		systemEntryImpl.setSnowAssetTagId(
			this.<String>getColumnOriginalValue("snowAssetTagId"));
		systemEntryImpl.setSnowAssetTagName(
			this.<String>getColumnOriginalValue("snowAssetTagName"));
		systemEntryImpl.setIsSlaSigned(
			this.<Boolean>getColumnOriginalValue("isSlaSigned"));
		systemEntryImpl.setIsSelfBi(
			this.<Boolean>getColumnOriginalValue("isSelfBi"));
		systemEntryImpl.setIsActive(
			this.<Boolean>getColumnOriginalValue("isActive"));
		systemEntryImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		systemEntryImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		systemEntryImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		systemEntryImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		systemEntryImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		systemEntryImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		systemEntryImpl.setUrlTitle(
			this.<String>getColumnOriginalValue("urlTitle"));
		systemEntryImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		systemEntryImpl.setStatusByUserId(
			this.<Long>getColumnOriginalValue("statusByUserId"));
		systemEntryImpl.setStatusByUserName(
			this.<String>getColumnOriginalValue("statusByUserName"));
		systemEntryImpl.setStatusDate(
			this.<Date>getColumnOriginalValue("statusDate"));

		return systemEntryImpl;
	}

	@Override
	public int compareTo(SystemEntry systemEntry) {
		long primaryKey = systemEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SystemEntry)) {
			return false;
		}

		SystemEntry systemEntry = (SystemEntry)object;

		long primaryKey = systemEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SystemEntry> toCacheModel() {
		SystemEntryCacheModel systemEntryCacheModel =
			new SystemEntryCacheModel();

		systemEntryCacheModel.mvccVersion = getMvccVersion();

		systemEntryCacheModel.uuid = getUuid();

		String uuid = systemEntryCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			systemEntryCacheModel.uuid = null;
		}

		systemEntryCacheModel.systemEntryId = getSystemEntryId();

		systemEntryCacheModel.systemCode = getSystemCode();

		systemEntryCacheModel.systemName = getSystemName();

		String systemName = systemEntryCacheModel.systemName;

		if ((systemName != null) && (systemName.length() == 0)) {
			systemEntryCacheModel.systemName = null;
		}

		systemEntryCacheModel.systemTitle = getSystemTitle();

		String systemTitle = systemEntryCacheModel.systemTitle;

		if ((systemTitle != null) && (systemTitle.length() == 0)) {
			systemEntryCacheModel.systemTitle = null;
		}

		systemEntryCacheModel.systemType = getSystemType();

		String systemType = systemEntryCacheModel.systemType;

		if ((systemType != null) && (systemType.length() == 0)) {
			systemEntryCacheModel.systemType = null;
		}

		systemEntryCacheModel.description = getDescription();

		String description = systemEntryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			systemEntryCacheModel.description = null;
		}

		systemEntryCacheModel.stewardName = getStewardName();

		String stewardName = systemEntryCacheModel.stewardName;

		if ((stewardName != null) && (stewardName.length() == 0)) {
			systemEntryCacheModel.stewardName = null;
		}

		systemEntryCacheModel.stewardId = getStewardId();

		String stewardId = systemEntryCacheModel.stewardId;

		if ((stewardId != null) && (stewardId.length() == 0)) {
			systemEntryCacheModel.stewardId = null;
		}

		systemEntryCacheModel.stewardDepartment = getStewardDepartment();

		String stewardDepartment = systemEntryCacheModel.stewardDepartment;

		if ((stewardDepartment != null) && (stewardDepartment.length() == 0)) {
			systemEntryCacheModel.stewardDepartment = null;
		}

		systemEntryCacheModel.businessOwnerName = getBusinessOwnerName();

		String businessOwnerName = systemEntryCacheModel.businessOwnerName;

		if ((businessOwnerName != null) && (businessOwnerName.length() == 0)) {
			systemEntryCacheModel.businessOwnerName = null;
		}

		systemEntryCacheModel.businessOwnerId = getBusinessOwnerId();

		String businessOwnerId = systemEntryCacheModel.businessOwnerId;

		if ((businessOwnerId != null) && (businessOwnerId.length() == 0)) {
			systemEntryCacheModel.businessOwnerId = null;
		}

		systemEntryCacheModel.contactPersonName = getContactPersonName();

		String contactPersonName = systemEntryCacheModel.contactPersonName;

		if ((contactPersonName != null) && (contactPersonName.length() == 0)) {
			systemEntryCacheModel.contactPersonName = null;
		}

		systemEntryCacheModel.contactPersonId = getContactPersonId();

		String contactPersonId = systemEntryCacheModel.contactPersonId;

		if ((contactPersonId != null) && (contactPersonId.length() == 0)) {
			systemEntryCacheModel.contactPersonId = null;
		}

		systemEntryCacheModel.sandboxName = getSandboxName();

		String sandboxName = systemEntryCacheModel.sandboxName;

		if ((sandboxName != null) && (sandboxName.length() == 0)) {
			systemEntryCacheModel.sandboxName = null;
		}

		systemEntryCacheModel.gestorDepartmentId = getGestorDepartmentId();

		String gestorDepartmentId = systemEntryCacheModel.gestorDepartmentId;

		if ((gestorDepartmentId != null) &&
			(gestorDepartmentId.length() == 0)) {

			systemEntryCacheModel.gestorDepartmentId = null;
		}

		systemEntryCacheModel.gestorDepartmentName = getGestorDepartmentName();

		String gestorDepartmentName =
			systemEntryCacheModel.gestorDepartmentName;

		if ((gestorDepartmentName != null) &&
			(gestorDepartmentName.length() == 0)) {

			systemEntryCacheModel.gestorDepartmentName = null;
		}

		systemEntryCacheModel.role = getRole();

		String role = systemEntryCacheModel.role;

		if ((role != null) && (role.length() == 0)) {
			systemEntryCacheModel.role = null;
		}

		systemEntryCacheModel.snowAssetTagId = getSnowAssetTagId();

		String snowAssetTagId = systemEntryCacheModel.snowAssetTagId;

		if ((snowAssetTagId != null) && (snowAssetTagId.length() == 0)) {
			systemEntryCacheModel.snowAssetTagId = null;
		}

		systemEntryCacheModel.snowAssetTagName = getSnowAssetTagName();

		String snowAssetTagName = systemEntryCacheModel.snowAssetTagName;

		if ((snowAssetTagName != null) && (snowAssetTagName.length() == 0)) {
			systemEntryCacheModel.snowAssetTagName = null;
		}

		systemEntryCacheModel.isSlaSigned = isIsSlaSigned();

		systemEntryCacheModel.isSelfBi = isIsSelfBi();

		systemEntryCacheModel.isActive = isIsActive();

		systemEntryCacheModel.groupId = getGroupId();

		systemEntryCacheModel.companyId = getCompanyId();

		systemEntryCacheModel.userId = getUserId();

		systemEntryCacheModel.userName = getUserName();

		String userName = systemEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			systemEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			systemEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			systemEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			systemEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			systemEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		systemEntryCacheModel.urlTitle = getUrlTitle();

		String urlTitle = systemEntryCacheModel.urlTitle;

		if ((urlTitle != null) && (urlTitle.length() == 0)) {
			systemEntryCacheModel.urlTitle = null;
		}

		systemEntryCacheModel.status = getStatus();

		systemEntryCacheModel.statusByUserId = getStatusByUserId();

		systemEntryCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = systemEntryCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			systemEntryCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			systemEntryCacheModel.statusDate = statusDate.getTime();
		}
		else {
			systemEntryCacheModel.statusDate = Long.MIN_VALUE;
		}

		return systemEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SystemEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SystemEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SystemEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((SystemEntry)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<SystemEntry, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<SystemEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SystemEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((SystemEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SystemEntry>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					SystemEntry.class, ModelWrapper.class);

	}

	private long _mvccVersion;
	private String _uuid;
	private long _systemEntryId;
	private long _systemCode;
	private String _systemName;
	private String _systemTitle;
	private String _systemType;
	private String _description;
	private String _stewardName;
	private String _stewardId;
	private String _stewardDepartment;
	private String _businessOwnerName;
	private String _businessOwnerId;
	private String _contactPersonName;
	private String _contactPersonId;
	private String _sandboxName;
	private String _gestorDepartmentId;
	private String _gestorDepartmentName;
	private String _role;
	private String _snowAssetTagId;
	private String _snowAssetTagName;
	private boolean _isSlaSigned;
	private boolean _isSelfBi;
	private boolean _isActive;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _urlTitle;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<SystemEntry, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SystemEntry)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("mvccVersion", _mvccVersion);
		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("systemEntryId", _systemEntryId);
		_columnOriginalValues.put("systemCode", _systemCode);
		_columnOriginalValues.put("systemName", _systemName);
		_columnOriginalValues.put("systemTitle", _systemTitle);
		_columnOriginalValues.put("systemType", _systemType);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("stewardName", _stewardName);
		_columnOriginalValues.put("stewardId", _stewardId);
		_columnOriginalValues.put("stewardDepartment", _stewardDepartment);
		_columnOriginalValues.put("businessOwnerName", _businessOwnerName);
		_columnOriginalValues.put("businessOwnerId", _businessOwnerId);
		_columnOriginalValues.put("contactPersonName", _contactPersonName);
		_columnOriginalValues.put("contactPersonId", _contactPersonId);
		_columnOriginalValues.put("sandboxName", _sandboxName);
		_columnOriginalValues.put("gestorDepartmentId", _gestorDepartmentId);
		_columnOriginalValues.put(
			"gestorDepartmentName", _gestorDepartmentName);
		_columnOriginalValues.put("role_", _role);
		_columnOriginalValues.put("snowAssetTagId", _snowAssetTagId);
		_columnOriginalValues.put("snowAssetTagName", _snowAssetTagName);
		_columnOriginalValues.put("isSlaSigned", _isSlaSigned);
		_columnOriginalValues.put("isSelfBi", _isSelfBi);
		_columnOriginalValues.put("isActive", _isActive);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("urlTitle", _urlTitle);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("role_", "role");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("mvccVersion", 1L);

		columnBitmasks.put("uuid_", 2L);

		columnBitmasks.put("systemEntryId", 4L);

		columnBitmasks.put("systemCode", 8L);

		columnBitmasks.put("systemName", 16L);

		columnBitmasks.put("systemTitle", 32L);

		columnBitmasks.put("systemType", 64L);

		columnBitmasks.put("description", 128L);

		columnBitmasks.put("stewardName", 256L);

		columnBitmasks.put("stewardId", 512L);

		columnBitmasks.put("stewardDepartment", 1024L);

		columnBitmasks.put("businessOwnerName", 2048L);

		columnBitmasks.put("businessOwnerId", 4096L);

		columnBitmasks.put("contactPersonName", 8192L);

		columnBitmasks.put("contactPersonId", 16384L);

		columnBitmasks.put("sandboxName", 32768L);

		columnBitmasks.put("gestorDepartmentId", 65536L);

		columnBitmasks.put("gestorDepartmentName", 131072L);

		columnBitmasks.put("role_", 262144L);

		columnBitmasks.put("snowAssetTagId", 524288L);

		columnBitmasks.put("snowAssetTagName", 1048576L);

		columnBitmasks.put("isSlaSigned", 2097152L);

		columnBitmasks.put("isSelfBi", 4194304L);

		columnBitmasks.put("isActive", 8388608L);

		columnBitmasks.put("groupId", 16777216L);

		columnBitmasks.put("companyId", 33554432L);

		columnBitmasks.put("userId", 67108864L);

		columnBitmasks.put("userName", 134217728L);

		columnBitmasks.put("createDate", 268435456L);

		columnBitmasks.put("modifiedDate", 536870912L);

		columnBitmasks.put("urlTitle", 1073741824L);

		columnBitmasks.put("status", 2147483648L);

		columnBitmasks.put("statusByUserId", 4294967296L);

		columnBitmasks.put("statusByUserName", 8589934592L);

		columnBitmasks.put("statusDate", 17179869184L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SystemEntry _escapedModel;

}