/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cz.csob.ency.workflow.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EncyWorkflowTransition service. Represents a row in the &quot;ency_workflowtransition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>cz.csob.ency.workflow.model.impl.EncyWorkflowTransitionModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>cz.csob.ency.workflow.model.impl.EncyWorkflowTransitionImpl</code>.
 * </p>
 *
 * @author Miroslav Čermák
 * @see EncyWorkflowTransition
 * @generated
 */
@ProviderType
public interface EncyWorkflowTransitionModel
	extends BaseModel<EncyWorkflowTransition> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ency workflow transition model instance should use the {@link EncyWorkflowTransition} interface instead.
	 */

	/**
	 * Returns the primary key of this ency workflow transition.
	 *
	 * @return the primary key of this ency workflow transition
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this ency workflow transition.
	 *
	 * @param primaryKey the primary key of this ency workflow transition
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this ency workflow transition.
	 *
	 * @return the uuid of this ency workflow transition
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this ency workflow transition.
	 *
	 * @param uuid the uuid of this ency workflow transition
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the transition ID of this ency workflow transition.
	 *
	 * @return the transition ID of this ency workflow transition
	 */
	public long getTransitionId();

	/**
	 * Sets the transition ID of this ency workflow transition.
	 *
	 * @param transitionId the transition ID of this ency workflow transition
	 */
	public void setTransitionId(long transitionId);

	/**
	 * Returns the state ID of this ency workflow transition.
	 *
	 * @return the state ID of this ency workflow transition
	 */
	public long getStateId();

	/**
	 * Sets the state ID of this ency workflow transition.
	 *
	 * @param stateId the state ID of this ency workflow transition
	 */
	public void setStateId(long stateId);

	/**
	 * Returns the workflow ID of this ency workflow transition.
	 *
	 * @return the workflow ID of this ency workflow transition
	 */
	public long getWorkflowId();

	/**
	 * Sets the workflow ID of this ency workflow transition.
	 *
	 * @param workflowId the workflow ID of this ency workflow transition
	 */
	public void setWorkflowId(long workflowId);

	/**
	 * Returns the version of this ency workflow transition.
	 *
	 * @return the version of this ency workflow transition
	 */
	public long getVersion();

	/**
	 * Sets the version of this ency workflow transition.
	 *
	 * @param version the version of this ency workflow transition
	 */
	public void setVersion(long version);

	/**
	 * Returns the name of this ency workflow transition.
	 *
	 * @return the name of this ency workflow transition
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this ency workflow transition.
	 *
	 * @param name the name of this ency workflow transition
	 */
	public void setName(String name);

	/**
	 * Returns the title of this ency workflow transition.
	 *
	 * @return the title of this ency workflow transition
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this ency workflow transition.
	 *
	 * @param title the title of this ency workflow transition
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this ency workflow transition.
	 *
	 * @return the description of this ency workflow transition
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this ency workflow transition.
	 *
	 * @param description the description of this ency workflow transition
	 */
	public void setDescription(String description);

	/**
	 * Returns the target state name of this ency workflow transition.
	 *
	 * @return the target state name of this ency workflow transition
	 */
	@AutoEscape
	public String getTargetStateName();

	/**
	 * Sets the target state name of this ency workflow transition.
	 *
	 * @param targetStateName the target state name of this ency workflow transition
	 */
	public void setTargetStateName(String targetStateName);

	/**
	 * Returns the target state ID of this ency workflow transition.
	 *
	 * @return the target state ID of this ency workflow transition
	 */
	public long getTargetStateId();

	/**
	 * Sets the target state ID of this ency workflow transition.
	 *
	 * @param targetStateId the target state ID of this ency workflow transition
	 */
	public void setTargetStateId(long targetStateId);

	/**
	 * Returns the css icon of this ency workflow transition.
	 *
	 * @return the css icon of this ency workflow transition
	 */
	@AutoEscape
	public String getCssIcon();

	/**
	 * Sets the css icon of this ency workflow transition.
	 *
	 * @param cssIcon the css icon of this ency workflow transition
	 */
	public void setCssIcon(String cssIcon);

	/**
	 * Returns the css icon color of this ency workflow transition.
	 *
	 * @return the css icon color of this ency workflow transition
	 */
	@AutoEscape
	public String getCssIconColor();

	/**
	 * Sets the css icon color of this ency workflow transition.
	 *
	 * @param cssIconColor the css icon color of this ency workflow transition
	 */
	public void setCssIconColor(String cssIconColor);

	/**
	 * Returns the active of this ency workflow transition.
	 *
	 * @return the active of this ency workflow transition
	 */
	public Boolean getActive();

	/**
	 * Sets the active of this ency workflow transition.
	 *
	 * @param active the active of this ency workflow transition
	 */
	public void setActive(Boolean active);

	/**
	 * Returns the create date of this ency workflow transition.
	 *
	 * @return the create date of this ency workflow transition
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this ency workflow transition.
	 *
	 * @param createDate the create date of this ency workflow transition
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this ency workflow transition.
	 *
	 * @return the modified date of this ency workflow transition
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this ency workflow transition.
	 *
	 * @param modifiedDate the modified date of this ency workflow transition
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the order of this ency workflow transition.
	 *
	 * @return the order of this ency workflow transition
	 */
	public long getOrder();

	/**
	 * Sets the order of this ency workflow transition.
	 *
	 * @param order the order of this ency workflow transition
	 */
	public void setOrder(long order);

	@Override
	public EncyWorkflowTransition cloneWithOriginalValues();

}