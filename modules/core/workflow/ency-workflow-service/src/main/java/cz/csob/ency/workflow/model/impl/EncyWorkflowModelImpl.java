/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cz.csob.ency.workflow.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import cz.csob.ency.workflow.model.EncyWorkflow;
import cz.csob.ency.workflow.model.EncyWorkflowModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the EncyWorkflow service. Represents a row in the &quot;ency_workflow&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>EncyWorkflowModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EncyWorkflowImpl}.
 * </p>
 *
 * @author Miroslav Čermák
 * @see EncyWorkflowImpl
 * @generated
 */
public class EncyWorkflowModelImpl
	extends BaseModelImpl<EncyWorkflow> implements EncyWorkflowModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ency workflow model instance should use the <code>EncyWorkflow</code> interface instead.
	 */
	public static final String TABLE_NAME = "ency_workflow";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"workflowId", Types.BIGINT},
		{"className", Types.VARCHAR}, {"title", Types.VARCHAR},
		{"description", Types.CLOB}, {"initialStateName", Types.VARCHAR},
		{"version", Types.BIGINT}, {"active_", Types.BOOLEAN},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workflowId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("className", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.CLOB);
		TABLE_COLUMNS_MAP.put("initialStateName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("version", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("active_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ency_workflow (uuid_ VARCHAR(75) null,workflowId LONG not null primary key,className VARCHAR(1000) null,title VARCHAR(1000) null,description TEXT null,initialStateName VARCHAR(75) null,version LONG,active_ BOOLEAN,createDate DATE null,modifiedDate DATE null)";

	public static final String TABLE_SQL_DROP = "drop table ency_workflow";

	public static final String ORDER_BY_JPQL =
		" ORDER BY encyWorkflow.workflowId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ency_workflow.workflowId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACTIVE_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CLASSNAME_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long WORKFLOWID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public EncyWorkflowModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workflowId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkflowId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workflowId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EncyWorkflow.class;
	}

	@Override
	public String getModelClassName() {
		return EncyWorkflow.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<EncyWorkflow, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<EncyWorkflow, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EncyWorkflow, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((EncyWorkflow)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<EncyWorkflow, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<EncyWorkflow, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(EncyWorkflow)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<EncyWorkflow, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<EncyWorkflow, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<EncyWorkflow, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<EncyWorkflow, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<EncyWorkflow, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<EncyWorkflow, Object>>();
		Map<String, BiConsumer<EncyWorkflow, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<EncyWorkflow, ?>>();

		attributeGetterFunctions.put("uuid", EncyWorkflow::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<EncyWorkflow, String>)EncyWorkflow::setUuid);
		attributeGetterFunctions.put("workflowId", EncyWorkflow::getWorkflowId);
		attributeSetterBiConsumers.put(
			"workflowId",
			(BiConsumer<EncyWorkflow, Long>)EncyWorkflow::setWorkflowId);
		attributeGetterFunctions.put("className", EncyWorkflow::getClassName);
		attributeSetterBiConsumers.put(
			"className",
			(BiConsumer<EncyWorkflow, String>)EncyWorkflow::setClassName);
		attributeGetterFunctions.put("title", EncyWorkflow::getTitle);
		attributeSetterBiConsumers.put(
			"title", (BiConsumer<EncyWorkflow, String>)EncyWorkflow::setTitle);
		attributeGetterFunctions.put(
			"description", EncyWorkflow::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<EncyWorkflow, String>)EncyWorkflow::setDescription);
		attributeGetterFunctions.put(
			"initialStateName", EncyWorkflow::getInitialStateName);
		attributeSetterBiConsumers.put(
			"initialStateName",
			(BiConsumer<EncyWorkflow, String>)
				EncyWorkflow::setInitialStateName);
		attributeGetterFunctions.put("version", EncyWorkflow::getVersion);
		attributeSetterBiConsumers.put(
			"version",
			(BiConsumer<EncyWorkflow, Long>)EncyWorkflow::setVersion);
		attributeGetterFunctions.put("active", EncyWorkflow::getActive);
		attributeSetterBiConsumers.put(
			"active",
			(BiConsumer<EncyWorkflow, Boolean>)EncyWorkflow::setActive);
		attributeGetterFunctions.put("createDate", EncyWorkflow::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<EncyWorkflow, Date>)EncyWorkflow::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", EncyWorkflow::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<EncyWorkflow, Date>)EncyWorkflow::setModifiedDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getWorkflowId() {
		return _workflowId;
	}

	@Override
	public void setWorkflowId(long workflowId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workflowId = workflowId;
	}

	@Override
	public String getClassName() {
		if (_className == null) {
			return "";
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_className = className;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalClassName() {
		return getColumnOriginalValue("className");
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_title = title;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@Override
	public String getInitialStateName() {
		if (_initialStateName == null) {
			return "";
		}
		else {
			return _initialStateName;
		}
	}

	@Override
	public void setInitialStateName(String initialStateName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_initialStateName = initialStateName;
	}

	@Override
	public long getVersion() {
		return _version;
	}

	@Override
	public void setVersion(long version) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_version = version;
	}

	@Override
	public Boolean getActive() {
		return _active;
	}

	@Override
	public void setActive(Boolean active) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_active = active;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Boolean getOriginalActive() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("active_"));
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, EncyWorkflow.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EncyWorkflow toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, EncyWorkflow>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EncyWorkflowImpl encyWorkflowImpl = new EncyWorkflowImpl();

		encyWorkflowImpl.setUuid(getUuid());
		encyWorkflowImpl.setWorkflowId(getWorkflowId());
		encyWorkflowImpl.setClassName(getClassName());
		encyWorkflowImpl.setTitle(getTitle());
		encyWorkflowImpl.setDescription(getDescription());
		encyWorkflowImpl.setInitialStateName(getInitialStateName());
		encyWorkflowImpl.setVersion(getVersion());
		encyWorkflowImpl.setActive(getActive());
		encyWorkflowImpl.setCreateDate(getCreateDate());
		encyWorkflowImpl.setModifiedDate(getModifiedDate());

		encyWorkflowImpl.resetOriginalValues();

		return encyWorkflowImpl;
	}

	@Override
	public EncyWorkflow cloneWithOriginalValues() {
		EncyWorkflowImpl encyWorkflowImpl = new EncyWorkflowImpl();

		encyWorkflowImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		encyWorkflowImpl.setWorkflowId(
			this.<Long>getColumnOriginalValue("workflowId"));
		encyWorkflowImpl.setClassName(
			this.<String>getColumnOriginalValue("className"));
		encyWorkflowImpl.setTitle(this.<String>getColumnOriginalValue("title"));
		encyWorkflowImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		encyWorkflowImpl.setInitialStateName(
			this.<String>getColumnOriginalValue("initialStateName"));
		encyWorkflowImpl.setVersion(
			this.<Long>getColumnOriginalValue("version"));
		encyWorkflowImpl.setActive(
			this.<Boolean>getColumnOriginalValue("active_"));
		encyWorkflowImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		encyWorkflowImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));

		return encyWorkflowImpl;
	}

	@Override
	public int compareTo(EncyWorkflow encyWorkflow) {
		long primaryKey = encyWorkflow.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof EncyWorkflow)) {
			return false;
		}

		EncyWorkflow encyWorkflow = (EncyWorkflow)object;

		long primaryKey = encyWorkflow.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<EncyWorkflow> toCacheModel() {
		EncyWorkflowCacheModel encyWorkflowCacheModel =
			new EncyWorkflowCacheModel();

		encyWorkflowCacheModel.uuid = getUuid();

		String uuid = encyWorkflowCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			encyWorkflowCacheModel.uuid = null;
		}

		encyWorkflowCacheModel.workflowId = getWorkflowId();

		encyWorkflowCacheModel.className = getClassName();

		String className = encyWorkflowCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			encyWorkflowCacheModel.className = null;
		}

		encyWorkflowCacheModel.title = getTitle();

		String title = encyWorkflowCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			encyWorkflowCacheModel.title = null;
		}

		encyWorkflowCacheModel.description = getDescription();

		String description = encyWorkflowCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			encyWorkflowCacheModel.description = null;
		}

		encyWorkflowCacheModel.initialStateName = getInitialStateName();

		String initialStateName = encyWorkflowCacheModel.initialStateName;

		if ((initialStateName != null) && (initialStateName.length() == 0)) {
			encyWorkflowCacheModel.initialStateName = null;
		}

		encyWorkflowCacheModel.version = getVersion();

		Boolean active = getActive();

		if (active != null) {
			encyWorkflowCacheModel.active = active;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			encyWorkflowCacheModel.createDate = createDate.getTime();
		}
		else {
			encyWorkflowCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			encyWorkflowCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			encyWorkflowCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return encyWorkflowCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<EncyWorkflow, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<EncyWorkflow, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EncyWorkflow, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((EncyWorkflow)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<EncyWorkflow, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<EncyWorkflow, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EncyWorkflow, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((EncyWorkflow)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, EncyWorkflow>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					EncyWorkflow.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _workflowId;
	private String _className;
	private String _title;
	private String _description;
	private String _initialStateName;
	private long _version;
	private Boolean _active;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<EncyWorkflow, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((EncyWorkflow)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("workflowId", _workflowId);
		_columnOriginalValues.put("className", _className);
		_columnOriginalValues.put("title", _title);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("initialStateName", _initialStateName);
		_columnOriginalValues.put("version", _version);
		_columnOriginalValues.put("active_", _active);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("active_", "active");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("workflowId", 2L);

		columnBitmasks.put("className", 4L);

		columnBitmasks.put("title", 8L);

		columnBitmasks.put("description", 16L);

		columnBitmasks.put("initialStateName", 32L);

		columnBitmasks.put("version", 64L);

		columnBitmasks.put("active_", 128L);

		columnBitmasks.put("createDate", 256L);

		columnBitmasks.put("modifiedDate", 512L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private EncyWorkflow _escapedModel;

}